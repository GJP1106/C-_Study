// 3-5.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include "Time.h"

void func(Time tmptime) {
	return;
}

Time func1() {
	Time tmptime;
	return tmptime;  //系统产生了临时对象并且调用了类的拷贝构造函数
}

int main()
{
	//一、拷贝构造函数
	int a = 3;
	int b = a; //普通的拷贝的行为
	//默认情况下，类对象的拷贝是每个成员变量逐个拷贝
	//如果一个类的构造函数的第一个参数 是所属的类类型的引用。如果还有其他额外参数，
	//那么这些额外的参数还都有默认值，则这个构造函数就叫做拷贝构造函数。
	//函数默认参数必须放在函数声明中，除非该函数没有函数声明
	//拷贝构造函数的作用：会在一定的时机，被系统调用。

	//(1)、建议拷贝构造函数第一个参数总是待着const
	//(2)、explicit：拷贝构造函数一般不要声明成explicit。

	//"成员变量逐个拷贝"的功能因为我们自己定义的拷贝构造函数的存在而丢失了作用，
	//或者说我么自己的“拷贝构造函数”取代了系统默认的每个成员变量逐个拷贝的这种行为。

	//(a)如果我们没有为类定义一个拷贝构造函数，编译器就会帮我们定义一个"合成拷贝构造函数"；
	//(b)如果是编译器给我们合成的拷贝构造函数，这个合成拷贝构造函数一般也是将参数temtime的成员逐个拷贝到正在创建的对象中。
	//每个成员的类型决定了它如何拷贝，比如说成员变量如果是整型的，那么就直接把值拷贝过来。
	//如果成员变量是类类型，那么就会调用这个类的拷贝构造函数来拷贝。
	//(c)如果你自己定义了拷贝构造函数，那么就取代了系统合成的拷贝构造函数，这个时候，你就必须要在你自己的拷贝构造函数中给类成员赋值
	//以免出现类成员没有被赋值就使用的情况发生。

	Time myTime;  //这个会调用默认构造函数（不带参数）
	//Time myTime2 = myTime;  //调用了拷贝构造函数
	//Time myTime3(myTime); //调用了拷贝构造函数
	//Time myTime4{ myTime }; //调用了拷贝构造函数
	//Time myTime5 = { myTime }; //调用了拷贝构造函数
	/*???为这么这种赋值方式会报错
	Time myTime6;  //这个会调用默认构造函数(不带参数)
	myTime6 = myTime;*/

	//还有一些情况会发生拷贝构造函数的调用的情形。
	//(1)将一个对象作为实参传递给一个非引用类型的形参。
	//func(myTime);
	//(2)从一个函数中返回一个对象的时候
	Time mytmp = func1();

	//(3)还有一些其他的情况系统也会调用拷贝构造函数(以后遇到再说)

	return 0;
}

